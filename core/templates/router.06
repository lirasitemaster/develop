<?php defined('isENGINE') or die;

global $template;
global $uri;
	
// ВПОЛНЕ ВОЗМОЖНО, ЧТО ЗДЕСЬ МНОГО НЕНУЖНЫХ ПАРАМЕТРОВ,
// В ЧАСТНОСТИ В $template -> list И В $template -> path
// ПОТОМУ ЧТО ОНИ МОГУТ ДУБЛИРОВАТЬСЯ С УЖЕ СУЩЕСТВУЮЩИМИ

// ТАКЖЕ НУЖНО БЫТЬ ОЧЕНЬ АККУРАТНЫМИ И ВНИМАТЕЛЬНЫМИ С ПАРАМЕТРАМИ $template -> page['parents']
// ПОТОМУ ЧТО НАПРИМЕР $template -> path -> array (убран, нет его!) ДОНАСТРАИВАЕТСЯ В ИНИЦИАЛИЗАЦИИ КОНТЕНТА

// узнаем параметры шаблона
// из структуры и запрошенной страницы

$template -> page = structureSearch($template -> list -> router, $template -> list -> structure);

// проверяем домашнюю страницу на отсутствие в урле папок

if ($template -> page['type'] === 'home' && !empty($uri -> path -> array)) {
	unset($template -> page);
}

// убираем список параметров из объекта шаблон и помещаем их в объект uri,
// а также в uri чистим от них пути, а их перемещаем в раздел запросов

if (!empty($template -> page['parameters'])) {
	
	$c = count($uri -> path -> array) - count($template -> page['parameters']);
	
	$uri -> query -> path = $template -> page['parameters'];
	
	if ($c > 0) {
		array_splice($uri -> path -> array, $c);
	} else {
		$uri -> path -> array = [];
	}
	
	$uri -> path -> string = !empty($uri -> path -> array) ? objectToString($uri -> path -> array, '/') . '/' : '';
	
	unset($c);
	
}

unset($template -> page['parameters']);

// если страницы нет, то выводим ошибку

if (empty($template -> page)) {
	error('404', false, 'error 404 from router -- not found page');
}

// настраиваем параметры страницы

if (!empty($template -> page['parent']['array'])) {
	$template -> list -> router = $template -> page['parent']['array'];
	if (!empty($template -> page['parent']['template'])) {
		array_unshift($template -> list -> router, $template -> page['parent']['template']);
	}
}

if (!empty($template -> page['parent']['folders'])) {
	array_pop($template -> page['parent']['folders']);
	$template -> page['parents'] = $template -> page['parent']['folders'];
}

// вычисляем текущий шаблон

foreach ($template -> list -> folders as &$item) {
	$item = substr($item, 0, -1);
}

if (!empty($template -> page['parent']['template'])) {
	
	$template -> name = $template -> page['parent']['template'];
	
	if (in_array($template -> name, $template -> list -> folders)) {
		
		$template -> path -> init .= $template -> name . DS;
		//$template -> path -> url .= $template -> name . '/';
		
		array_shift($template -> list -> router);
		
	} else {
		
		//error('403', false, 'needed template was not found');
		
	}
	
} else {
	
	if (in_array($template -> name, $template -> list -> folders)) {
		
		$template -> path -> init .= $template -> name . DS;
		//$template -> path -> url .= $template -> name . '/';
		
		if (!in_array($template -> name, $template -> list -> structure)) {
			$template -> path -> init .= 'section' . DS . 'default' . DS;
			//$template -> path -> url .= 'section/default/';
		}
		
		// в новом переработанном условии эта проверка не будет проходима для parent.template
		// потому что отсутствие принудительного шаблона в списке шаблонов или структур
		// будет выводить ошибку при проверке ранее
		
		array_shift($template -> list -> router);
		
	} else {
		
		$template -> name = 'default';
		$template -> path -> init .= 'default' . DS;
		//$template -> path -> url .= 'default/';
		
	}
	
}

if (empty($template -> list -> router)) {
	$template -> list -> router[] = 'home';
}

// настраиваем пути текущего шаблона

//$template -> path -> html = $template -> path -> init . 'html' . DS;
//$template -> path -> inner = $template -> path -> init . 'html' . DS . 'inner' . DS;
//$template -> path -> wrapper = $template -> path -> init . 'html' . DS . 'wrapper' . DS . ($template -> page['name'] === 'home' ? 'home_' : 'inner_');

$template -> path -> page = $template -> path -> init . 'inner' . DS . objectToString($template -> list -> router, DS) . '.php';

unset($template -> page['parent'], $template -> list);

?>